name: Publish

on:
  workflow_run:
    workflows: ['Test']
    branches: [master]
    types:
      - completed

permissions:
  contents: read

jobs:
  npm:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build
        run: |
          yarn install --frozen-lockfile
          yarn build-prod

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true

      - name: Publish
        run: |
          echo ${{ secrets.NPM_REGISTRY }} >> .npmrc
          npx google-artifactregistry-auth .npmrc
          npm publish

  build:
    needs: npm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get npm version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: GCR
        run: |
          docker build -t asia.gcr.io/${{ secrets.GKE_PROJECT }}/grace:${{ steps.package-version.outputs.current-version }} .
          gcloud auth configure-docker
          docker push asia.gcr.io/${{ secrets.GKE_PROJECT }}/apollo:${{ steps.package-version.outputs.current-version }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get npm version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Deploy
        run: cd k8s && bash deploy.sh
        env:
          IMAGE_TAG: asia.gcr.io/${{ secrets.GKE_PROJECT }}/grace:${{ steps.package-version.outputs.current-version }}
          NAME_CI: grace
          DOMAIN: ${{ secrets.DOMAIN_GRACE }}
